# User Management Endpoints

'/users':
  get:
    tags:
      - Users
    summary: List users in organization
    description: |
      Retrieves a list of users in the current organization.
      
      This endpoint returns a paginated list of users in the organization,
      with optional filtering by status, role, location, and search term.
      Requires administrator role.
    operationId: listUsers
    security:
      - bearerAuth: []
    parameters:
      - name: page
        in: query
        description: Page number for pagination
        schema:
          type: integer
          minimum: 1
          default: 1
      - name: limit
        in: query
        description: Number of items per page
        schema:
          type: integer
          minimum: 1
          maximum: 100
          default: 20
      - name: status
        in: query
        description: Filter by user status
        schema:
          type: string
          enum: [active, inactive, pending]
      - name: role
        in: query
        description: Filter by user role
        schema:
          type: string
          enum: [admin, physician, staff, radiologist]
      - name: locationId
        in: query
        description: Filter by assigned location
        schema:
          type: string
      - name: search
        in: query
        description: Search term for user name or email
        schema:
          type: string
    responses:
      '200':
        description: List of users
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                data:
                  type: object
                  properties:
                    users:
                      type: array
                      items:
                        $ref: '../components/schemas.yaml#/UserSummary'
                    pagination:
                      $ref: '../components/schemas.yaml#/Pagination'
      '401':
        $ref: '../components/responses.yaml#/Unauthorized'
      '403':
        $ref: '../components/responses.yaml#/Forbidden'
  
  post:
    tags:
      - Users
    summary: Create a new user
    description: |
      Creates a new user in the organization.
      
      This endpoint creates a new user with the specified information
      and optionally sends an invitation email. Requires administrator role.
    operationId: createUser
    security:
      - bearerAuth: []
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              email:
                type: string
                format: email
                description: User's email address
              firstName:
                type: string
                description: User's first name
              lastName:
                type: string
                description: User's last name
              role:
                type: string
                enum: [admin, physician, staff, radiologist]
                description: User's role
              specialty:
                type: string
                description: User's medical specialty (required for physicians)
              phoneNumber:
                type: string
                description: User's phone number
              sendInvite:
                type: boolean
                description: Whether to send an invitation email
                default: true
              locationAssignments:
                type: array
                description: Locations to assign to the user
                items:
                  type: object
                  properties:
                    locationId:
                      type: string
                      description: Location ID
                    isPrimary:
                      type: boolean
                      description: Whether this is the primary location
            required:
              - email
              - firstName
              - lastName
              - role
    responses:
      '201':
        description: User created successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                data:
                  $ref: '../components/schemas.yaml#/User'
      '400':
        $ref: '../components/responses.yaml#/BadRequest'
      '401':
        $ref: '../components/responses.yaml#/Unauthorized'
      '403':
        $ref: '../components/responses.yaml#/Forbidden'
      '409':
        description: Email already in use
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: false
                message:
                  type: string
                  example: "Email address is already in use"

'/users/me':
  get:
    tags:
      - Users
    summary: Get current user profile
    description: |
      Retrieves the profile of the currently authenticated user.
      
      This endpoint returns detailed information about the current user,
      including their profile, settings, and organization information.
    operationId: getCurrentUser
    security:
      - bearerAuth: []
    responses:
      '200':
        description: Current user profile
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                data:
                  $ref: '../components/schemas.yaml#/User'
      '401':
        $ref: '../components/responses.yaml#/Unauthorized'
  
  patch:
    tags:
      - Users
    summary: Update current user profile
    description: |
      Updates the profile of the currently authenticated user.
      
      This endpoint allows users to update their own profile information,
      such as name, phone number, specialty, and settings.
    operationId: updateCurrentUser
    security:
      - bearerAuth: []
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              firstName:
                type: string
                description: User's first name
              lastName:
                type: string
                description: User's last name
              phoneNumber:
                type: string
                description: User's phone number
              specialty:
                type: string
                description: User's medical specialty (for physicians)
              settings:
                $ref: '../components/schemas.yaml#/UserSettings'
    responses:
      '200':
        description: Profile updated successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                data:
                  $ref: '../components/schemas.yaml#/User'
      '400':
        $ref: '../components/responses.yaml#/BadRequest'
      '401':
        $ref: '../components/responses.yaml#/Unauthorized'

'/users/me/notification-preferences':
  patch:
    tags:
      - Users
    summary: Update notification preferences
    description: |
      Updates the notification preferences of the currently authenticated user.
      
      This endpoint allows users to update their notification preferences
      for email, in-app, and SMS notifications.
    operationId: updateNotificationPreferences
    security:
      - bearerAuth: []
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              preferences:
                $ref: '../components/schemas.yaml#/NotificationPreferences'
    responses:
      '200':
        description: Notification preferences updated successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                data:
                  $ref: '../components/schemas.yaml#/NotificationPreferences'
      '400':
        $ref: '../components/responses.yaml#/BadRequest'
      '401':
        $ref: '../components/responses.yaml#/Unauthorized'

'/users/me/ui-preferences':
  patch:
    tags:
      - Users
    summary: Update UI preferences
    description: |
      Updates the UI preferences of the currently authenticated user.
      
      This endpoint allows users to update their UI preferences,
      such as theme, font size, and layout options.
    operationId: updateUiPreferences
    security:
      - bearerAuth: []
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              preferences:
                $ref: '../components/schemas.yaml#/UiPreferences'
    responses:
      '200':
        description: UI preferences updated successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                data:
                  $ref: '../components/schemas.yaml#/UiPreferences'
      '400':
        $ref: '../components/responses.yaml#/BadRequest'
      '401':
        $ref: '../components/responses.yaml#/Unauthorized'

'/users/me/profile-image':
  post:
    tags:
      - Users
    summary: Set profile image
    description: |
      Sets the profile image for the currently authenticated user.
      
      This endpoint confirms the upload of a profile image after it has been
      uploaded to the storage service using a presigned URL.
    operationId: setProfileImage
    security:
      - bearerAuth: []
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              fileKey:
                type: string
                description: The key of the uploaded file in the storage service
            required:
              - fileKey
    responses:
      '200':
        description: Profile image set successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                data:
                  type: object
                  properties:
                    profileImageUrl:
                      type: string
                      format: uri
                      description: URL for the uploaded profile image
                    thumbnailUrl:
                      type: string
                      format: uri
                      description: URL for a thumbnail version of the profile image
                    uploadDate:
                      type: string
                      format: date-time
                      description: Date the image was uploaded
      '400':
        $ref: '../components/responses.yaml#/BadRequest'
      '401':
        $ref: '../components/responses.yaml#/Unauthorized'
  
  delete:
    tags:
      - Users
    summary: Remove profile image
    description: |
      Removes the profile image for the currently authenticated user.
      
      This endpoint removes the user's profile image and reverts to the default avatar.
    operationId: removeProfileImage
    security:
      - bearerAuth: []
    responses:
      '200':
        description: Profile image removed successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                message:
                  type: string
                  example: "Profile image removed successfully"
      '401':
        $ref: '../components/responses.yaml#/Unauthorized'

'/users/me/profile-image-upload-url':
  get:
    tags:
      - Users
    summary: Get profile image upload URL
    description: |
      Generates a presigned URL for uploading a profile image.
      
      This endpoint returns a presigned URL that can be used to upload
      a profile image directly to the storage service.
    operationId: getProfileImageUploadUrl
    security:
      - bearerAuth: []
    responses:
      '200':
        description: Profile image upload URL generated successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                data:
                  type: object
                  properties:
                    presignedUrl:
                      type: string
                      format: uri
                      description: Presigned URL for uploading the image
                    fileKey:
                      type: string
                      description: The key to use when confirming the upload
                    expiresIn:
                      type: integer
                      description: Expiration time for the URL in seconds
                      example: 3600
      '401':
        $ref: '../components/responses.yaml#/Unauthorized'

'/users/me/login-history':
  get:
    tags:
      - Users
    summary: Get login history
    description: |
      Retrieves the login history for the currently authenticated user.
      
      This endpoint returns a paginated list of login events for the current user,
      including timestamps, IP addresses, and device information.
    operationId: getLoginHistory
    security:
      - bearerAuth: []
    parameters:
      - name: page
        in: query
        description: Page number for pagination
        schema:
          type: integer
          minimum: 1
          default: 1
      - name: limit
        in: query
        description: Number of items per page
        schema:
          type: integer
          minimum: 1
          maximum: 100
          default: 20
    responses:
      '200':
        description: Login history
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                data:
                  type: object
                  properties:
                    logins:
                      type: array
                      items:
                        $ref: '../components/schemas.yaml#/LoginRecord'
                    pagination:
                      $ref: '../components/schemas.yaml#/Pagination'
      '401':
        $ref: '../components/responses.yaml#/Unauthorized'

'/users/{userId}':
  get:
    tags:
      - Users
    summary: Get user by ID
    description: |
      Retrieves a user by their ID.
      
      This endpoint returns detailed information about a specific user.
      Requires administrator role.
    operationId: getUserById
    security:
      - bearerAuth: []
    parameters:
      - name: userId
        in: path
        description: ID of the user to retrieve
        required: true
        schema:
          type: string
    responses:
      '200':
        description: User details
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                data:
                  $ref: '../components/schemas.yaml#/User'
      '401':
        $ref: '../components/responses.yaml#/Unauthorized'
      '403':
        $ref: '../components/responses.yaml#/Forbidden'
      '404':
        $ref: '../components/responses.yaml#/NotFound'
  
  patch:
    tags:
      - Users
    summary: Update user
    description: |
      Updates a user's information.
      
      This endpoint allows administrators to update a user's information,
      including their role, status, and profile details.
    operationId: updateUser
    security:
      - bearerAuth: []
    parameters:
      - name: userId
        in: path
        description: ID of the user to update
        required: true
        schema:
          type: string
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              firstName:
                type: string
                description: User's first name
              lastName:
                type: string
                description: User's last name
              role:
                type: string
                enum: [admin, physician, staff, radiologist]
                description: User's role
              status:
                type: string
                enum: [active, inactive]
                description: User's status
              specialty:
                type: string
                description: User's medical specialty (for physicians)
              phoneNumber:
                type: string
                description: User's phone number
    responses:
      '200':
        description: User updated successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                data:
                  $ref: '../components/schemas.yaml#/User'
      '400':
        $ref: '../components/responses.yaml#/BadRequest'
      '401':
        $ref: '../components/responses.yaml#/Unauthorized'
      '403':
        $ref: '../components/responses.yaml#/Forbidden'
      '404':
        $ref: '../components/responses.yaml#/NotFound'

'/users/{userId}/status':
  patch:
    tags:
      - Users
    summary: Update user status
    description: |
      Updates a user's status.
      
      This endpoint allows administrators to activate or deactivate a user.
    operationId: updateUserStatus
    security:
      - bearerAuth: []
    parameters:
      - name: userId
        in: path
        description: ID of the user to update
        required: true
        schema:
          type: string
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                enum: [active, inactive]
                description: New user status
              reason:
                type: string
                description: Reason for the status change (required for deactivation)
            required:
              - status
    responses:
      '200':
        description: User status updated successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                data:
                  type: object
                  properties:
                    userId:
                      type: string
                      description: User ID
                    status:
                      type: string
                      enum: [active, inactive]
                      description: Updated user status
                    updatedAt:
                      type: string
                      format: date-time
                      description: Date and time of the update
      '400':
        $ref: '../components/responses.yaml#/BadRequest'
      '401':
        $ref: '../components/responses.yaml#/Unauthorized'
      '403':
        $ref: '../components/responses.yaml#/Forbidden'
      '404':
        $ref: '../components/responses.yaml#/NotFound'